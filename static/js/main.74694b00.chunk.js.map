{"version":3,"sources":["components/Recipe.js","components/Recipes.js","App.js","components/Router.js","index.js"],"names":["Recipe","props","recipeState","location","state","recipeDetails","name","label","calorie","calories","img","image","ingredientsArr","ingredients","url","console","log","source","className","src","alt","map","item","index","text","href","Recipes","urlName","split","join","to","pathname","App","useState","search","setSearch","recipes","setRecipes","getRecipe","searchItem","a","fetch","res","json","data","hits","useEffect","string","localStorage","getItem","JSON","parse","recipesString","stringify","setItem","onSubmit","e","preventDefault","type","value","onChange","searchInput","target","recipe","key","Router","basename","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"iRAsCeA,MAjCf,SAAgBC,GAEZ,IAAMC,EAAcD,EAAME,SAASC,MAAMC,cACnCC,EAAOJ,EAAYK,MACnBC,EAAUN,EAAYO,SACtBC,EAAMR,EAAYS,MAClBC,EAAiBV,EAAYW,YAC7BC,EAAMZ,EAAYY,IACxBC,QAAQC,IAAIF,GACZ,IAAMG,EAASf,EAAYe,OAC3B,OACI,yBAAKC,UAAU,+BACX,yBAAKA,UAAU,eAEX,yBAAKC,IAAKT,EAAKU,IAAKd,IACpB,yBAAKY,UAAU,6BACX,4BAAKZ,GACL,2BAAG,2CAAH,IAA2BE,GAC3B,sCAAYS,IAEhB,4BACI,2CACCL,EAAeS,KAAI,SAACC,EAAMC,GAAP,OAAiB,4BAAKD,EAAKE,UAKnD,uBAAGC,KAAMX,GAAT,uB,iCC9BD,SAASY,EAAT,GAAmC,IAAjBrB,EAAgB,EAAhBA,cAGvBC,EAAOD,EAAcE,MACrBG,EAAML,EAAcM,MAEpBgB,EAAWrB,EAAKsB,MAAM,MAAMC,KAAK,IAGvC,OACI,yBAAKX,UAAU,oBACX,yBAAKA,UAAU,kBACX,4BAAKZ,IAET,yBAAKa,IAAKT,EAAKU,IAAKd,IACpB,gCACI,kBAAC,IAAD,CACIY,UAAU,OACVY,GAAI,CACAC,SAAS,WAAD,OAAaJ,GACrBvB,MAAO,CAACC,mBAJhB,kBCyDD2B,MArEf,WACE,IADa,EAKeC,mBAAS,IALxB,mBAKNC,EALM,KAKEC,EALF,OAMiBF,mBAAS,IAN1B,mBAMNG,EANM,KAMGC,EANH,KAQPC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,MAAM,mCAAD,OAAoCF,EAApC,mBARX,WAQW,oBAPV,qCAME,cACVG,EADU,gBAEGA,EAAIC,OAFP,OAEVC,EAFU,OAGhB7B,QAAQC,IAAI4B,EAAKC,MACjBR,EAAWO,EAAKC,MAJA,2CAAH,sDA6Cf,OAtBAC,qBAAU,WACR,IAAMC,EAASC,aAAaC,QAAQ,WAC9BN,EAAOO,KAAKC,MAAMJ,GACxBV,EAAWM,KACX,IAQFG,qBAAU,WAGN,IAAMM,EAAgBF,KAAKG,UAAUjB,GACrCY,aAAaM,QAAQ,UAAWF,KAEjC,CAAChB,IAKF,yBAAKlB,UAAU,OACb,0BAAMqC,SAnCW,SAAAC,GACnBA,EAAEC,iBACF1C,QAAQC,IAAI,oBACZsB,EAAUJ,IAgCsBhB,UAAU,kBACtC,2BAAOwC,KAAK,OAAOC,MAAOzB,EAAQ0B,SAzClB,SAAAJ,GACpB,IAAMK,EAAcL,EAAEM,OAAOH,MAC7BxB,EAAU0B,MAwCN,+CAEF,yBAAK3C,UAAU,qBACZkB,EAAQf,KAAI,SAAC0C,EAAQxC,GAAT,OACX,kBAACG,EAAD,CAASsC,IAAKzC,EAAOlB,cAAe0D,EAAOA,eChDtCE,MAbf,WACI,OACI,6BACI,kBAAC,IAAD,CAAeC,SAAU,qBACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWpC,EAAKqC,OAAK,IACrC,kBAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWpE,QCL3DsE,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,W","file":"static/js/main.74694b00.chunk.js","sourcesContent":["import React from 'react';\r\n// import {Link} from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nfunction Recipe(props) {\r\n    \r\n    const recipeState = props.location.state.recipeDetails;\r\n    const name = recipeState.label;\r\n    const calorie = recipeState.calories;\r\n    const img = recipeState.image;\r\n    const ingredientsArr = recipeState.ingredients;\r\n    const url = recipeState.url;\r\n    console.log(url)\r\n    const source = recipeState.source;\r\n    return (\r\n        <div className=\"recipe-individual-container\">\r\n            <div className=\"recipe-card\">\r\n\r\n                <img src={img} alt={name}/>\r\n                <div className=\"recipe-individual-details\">\r\n                    <h3>{name}</h3>\r\n                    <p><span>Calorie :</span> {calorie}</p>\r\n                    <p>Source: {source}</p>\r\n                </div>\r\n                <ul>\r\n                    <h4>Ingredients</h4>\r\n                    {ingredientsArr.map((item, index) => <li>{item.text}</li>)}\r\n                </ul>\r\n                {/* <button>\r\n                    <Link className=\"link\" to={url}>Get Complete Recipe</Link>\r\n                </button> */}\r\n                <a href={url}>Get More Details</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Recipes({recipeDetails}) {\r\n\r\n\r\n    const name = recipeDetails.label;\r\n    const img = recipeDetails.image;\r\n    //to remove spaces in the name so as to add it to the url in Link\r\n    const urlName =  name.split(/\\s/).join('');\r\n   \r\n\r\n    return (        \r\n        <div className=\"recipe-container\">\r\n            <div className=\"recipe-details\">\r\n                <h3>{name}</h3>\r\n            </div>\r\n            <img src={img} alt={name}/>\r\n            <button>\r\n                <Link \r\n                    className=\"link\"\r\n                    to={{\r\n                        pathname: `/recipe/${urlName}`,\r\n                        state: {recipeDetails}\r\n                    }}\r\n                >\r\n                    View Details\r\n                </Link>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport Recipes from \"./components/Recipes\";\n\n\nfunction App() {\n  const API_ID = '9e8e09ff';\n  const API_KEY = 'f8ffa2feddd833ba1300f7f503a01c5b';\n\n\n  const [search, setSearch] = useState('');\n  const [recipes, setRecipes] = useState([]);\n\n  const getRecipe = async (searchItem) => {\n    const res =  await fetch(`https://api.edamam.com/search?q=${searchItem}&app_id=${API_ID}&app_key=${API_KEY}`);\n    const data = await res.json();\n    console.log(data.hits);\n    setRecipes(data.hits);\n  }\n\n  const getSearchText = e => {\n    const searchInput = e.target.value;\n    setSearch(searchInput);\n  }\n\n  const searchSubmit = e => {\n    e.preventDefault();\n    console.log('Search Initiated');\n    getRecipe(search);\n  }\n  \n\n  /*\n  *componentDidMount\n  First time the page is loaded, the state recipes is taken from localStorage.\n  */\n  useEffect(() => {\n    const string = localStorage.getItem('recipes');\n    const json = JSON.parse(string);\n    setRecipes(json);\n  },[])\n\n\n  /**\n   * *componentDidUpdate\n   * sets the recipes to localStorage each time recipes changes. Also it's a good practice to check length of recipes before \n   * pushing it to localStorage\n   */\n  useEffect(() => {\n    //let stateRecipe = recipes;\n    //if(stateRecipe.length > 0){\n      const recipesString = JSON.stringify(recipes);\n      localStorage.setItem(\"recipes\", recipesString);\n    //}\n  }, [recipes]);\n\n  \n\n  return (\n    <div className=\"App\">\n      <form onSubmit={searchSubmit} className=\"form-container\">\n        <input type=\"text\" value={search} onChange={getSearchText} />\n        <button>Get Recipe</button>\n      </form>\n      <div className=\"results-container\">\n        {recipes.map((recipe, index) => (\n          <Recipes key={index} recipeDetails={recipe.recipe} />\n        ))}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Recipe from \"./Recipe\";\r\nimport App from \"../App\";\r\n\r\nfunction Router() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter basename =\"/react-recipe-app\">\r\n                <Switch>\r\n                    <Route path=\"/\" component={App} exact />\r\n                    <Route path=\"/recipe/:name\" component={Recipe}  />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Router\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from \"./components/Router\";\n\n\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n"],"sourceRoot":""}